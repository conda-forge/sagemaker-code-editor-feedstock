# The name of the workflow, which will be displayed on the GitHub Actions page
name: AWS CodeBuild CI

# Trigger condition: Run when a new Pull Request is created or new code is pushed to an existing PR
on:
  pull_request:

# Set permissions for the workflow, which is key for secure authentication using OIDC
permissions:
  id-token: write   # Allows the workflow to get an OIDC JWT token
  contents: read    # Allows the workflow to read the repository content

jobs:
  # Define a job named "build"
  build:
    name: Build and Test
    # Run on the latest Ubuntu virtual environment
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials
      # Use the official aws-actions/configure-aws-credentials action
      # It uses an OIDC role, so don't need to store long-term keys in GitHub Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # The ARN of the AWS IAM role to assume
          role-to-assume: arn:aws:iam::961676525458:role/service-role/codebuild-CE-Versionupdate-Memory-service-role
          # The AWS region where your CodeBuild project is located
          aws-region: us-west-2
          role-duration-seconds: 10800

      # Step 3: Run AWS CodeBuild
      # Use the aws-actions/aws-codebuild-run-build action
      # It will start the build, wait for it to complete, and set the success/failure status accordingly
      - name: Run CodeBuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          # The name of your CodeBuild project
          project-name: CE-Versionupdate-Memory
          # Override the source for the CodeBuild project to use the latest code from the PR
          source-version-override: ${{ github.event.pull_request.head.sha }}
